name: TestDeployment

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Deploy-Sample-App:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Build Java Application
        run: |
          cd sample-hello-world
          chmod +x gradlew
          ./gradlew build
          cd ..

      - name: Deploy Artifact
        uses: Shynixn/repository-m2-deploy-action@v1.2.0
        with:
          # Required - Set the relative file path from the repository root to the jar file you want to deploy.
          # The name does not need to follow any naming convetions, it is automatically renamed according to the maven.
          primary-jar-file: 'sample-hello-world/build/libs/sample-hello-world-1.0.0.jar'
          # Required - Set the maven group id.
          group-id: 'com.github.shynixn.samplehelloworld'
          # Required - Set the maven artifact id.
          artifact-id: 'sample-hello-world'
          # Required - Set the maven version id.
          # Existing releases are simply overwritten if the jar file with this version was already deployed.
          # You can use the github.run_number environment variable to have automatically incrementing version: 1.0.${{ github.run_number }}
          version-id: 1.0.${{ github.run_number }}
          # Required - Used to access another repository of your or another github account to pull and push data from.
          # We cannot use GITHUB_TOKEN because the GITHUB_TOKEN does not have permissions to post to other private repositories.
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          # Required - Owner of the github repository you are using as maven repository.
          github-username: 'Shynixn'
          # Required - Name of the github repository you are using as maven repository.
          github-repository: 'm2'
          # Optional - Base64 Encoded Ascii armored version of the secret key.
          signing-key: ${{ secrets.SIGNING_KEY }}
          # Optional - Password of the secret key.
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
          # Optional - Directories containing java or kotlin source files. Separated by ; to specify multiple directories.
          source-directories: 'sample-hello-world/src/main/java'
          # Optional - If true and specifying source directories, a javadocs jar file containing kotlin docs gets generated.
          generate-kotlin-docs-jar: true
          # Optional - If true and specifying source directories, a sources jar file containing source files gets generated.
          generate-sources-jar: true
